First import method to test
===========================
>>> MyList = __import__('1-my_list').MyList

SUCCESS CASES:
=============

Test ints (program assumes all elements will be type int)
::
    >>> my_list = MyList()
    >>> my_list.append(3)
    >>> my_list.append(50)
    >>> my_list.append(-1)
    >>> print(my_list)
    [3, 50, -1]
    >>> my_list.print_sorted()
    [-1, 3, 50]
    >>> print(my_list)
    [3, 50, -1]

    >>> another_list = MyList()
    >>> another_list.append(300)
    >>> another_list.append(50)
    >>> another_list.append(-1)
    >>> print(another_list)
    [300, 50, -1]
    >>> another_list.print_sorted()
    [-1, 50, 300]
    >>> print(another_list)
    [300, 50, -1]

    >>> l = MyList()
    >>> l.append(-300)
    >>> l.append(50)
    >>> l.append(-1)
    >>> print(l)
    [-300, 50, -1]
    >>> l.print_sorted() # This will not return the list, so id check should be separated
    [-1, 50, -300]
    >>> print(id(l) == id(l.print_sorted())) # This will always be False as print_sorted() returns None
    False

Test list with only one element
::
    >>> solo = MyList()
    >>> solo.append(-99999)
    >>> print(solo)
    [-99999]
    >>> solo.print_sorted()
    [-99999]
    >>> print(solo)
    [-99999]

Test list with no elements
::
    >>> empty = MyList()
    >>> print(empty)
    []
    >>> empty.print_sorted()
    []

Test type, isinstance, issubclass
::
    >>> type(MyList()) # This will depend on the actual name of the class within the module
    <class '__main__.MyList'>
    >>> isinstance(MyList(), object)
    True
    >>> isinstance(MyList(), list)
    True
    >>> issubclass(MyList, list)
    True
    >>> 'print_sorted' in dir(MyList)
    True

FAIL CASES:
==========
